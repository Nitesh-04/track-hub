// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  clerkid      String        @unique
  email        String        @unique
  name         String
  githubid     String?
  applications Application[]
  rounds       Round[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Application {
  id            String   @id @default(uuid())
  companyName   String
  stipend       Int?
  ctc           Int?
  role          String
  location      String
  link          String?
  notifications Boolean  @default(true)
  userId        String
  user          User     @relation(fields: [userId], references: [clerkid], onDelete: Cascade)
  rounds        Round[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([userId])
}

model Round {
  id            String      @id @default(uuid())
  roundTitle    String
  roundDateTime DateTime
  venue         String
  roundLink     String?
  status        Status
  applicationId String
  application   Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  userId        String
  user          User        @relation(fields: [userId], references: [clerkid], onDelete: Cascade)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([applicationId])
}

enum Status {
  upcoming
  completed
}

// UPCOMING AND RECENTS CARD
// Company name notification on/off icon
// role
// round name
// timing venue 
// link
